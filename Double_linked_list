#include<stdio.h>
#include<stdlib.h>
struct node{
int data;
struct node*prev;
struct node*next;
};
struct node*head,*tail=NULL;
void create(int data){
struct node*newnode=(struct node*)malloc(sizeof(newnode));
newnode->data=data;
newnode->prev=NULL;
newnode->next=NULL;
if(head==NULL)
{
head=newnode;
tail=newnode;
}
else{
newnode->prev=tail;
tail->next=newnode;
tail=newnode;
}}
void display(){
struct node*current=head;
if(head==NULL){
printf("empty linked list");
}
printf("elements are:\n");
while(current!=NULL){
printf("%5d\t",current->data);
printf("\n");
current=current->next;
}}
void insert(int pos){
struct node*newnode=(struct node*)malloc(sizeof(struct node));
printf("enter a new node value");
scanf("%d",&newnode->data);
if(pos==1){
newnode->next=head;
head->prev=newnode;
head=newnode;
head->prev=NULL;
}
else{
struct node*current=head;
int i;
for(i=1;i<pos-1;i++)
{
current=current->next;
}
newnode->next=current->next;
newnode->prev=current;
current->next=newnode;
current->next->next->prev=newnode;
}}
void delete(int pos){
struct node*temp=head;
int length=0;
int i;
struct node*current=head;
while(current!=NULL)
{
length++;
current=current->next;
}
printf("length:%d\n",length);
if(pos==1){
temp=head;
head=head->next;
temp->next=NULL;
head->prev=NULL;
}
else if(pos==length){
current=head;
while(temp->next!=tail)
{
current=temp;
temp=temp->next;
}
current->next->prev=NULL;
current->next=NULL;
tail=current;
}
else{
temp=head;
for(i=1;i<pos-1;i++)
{
temp=temp->next;
}
temp->next->next->prev=temp;
temp->next=temp->next->next;
}}
void search(int key){
struct node*current=head;
int length=0;
while(current!=NULL){
length++;
current=current->next;
}
current=head;
int i;
for(i=1;i<=length;i++){
if(current->data=key){
printf("element found at %d position\n",i);
return;
}
else{
current=current->next;
}}
if(i>length){
printf("elementn not found\n");
}}
int main(){
int ch=0;
int item,pos;
while(ch!=6){
printf("1.create 2.insert 3.delete 4.display 5.search 6.exit");
printf("enter choice");
scanf("%d",&ch);
switch(ch){
case 1:printf("enter:");
      scanf("%d",&item);
      create(item);
      break;
case 2:printf("enter pos:");
      scanf("%d",&pos);
      insert(pos);
      break;
case 3:printf("enter pos:");
      scanf("%d",&pos);
      delete(pos);
      break;     
case 4:display();
      break;
case 5:printf("enter key:");
      scanf("%d",&item);
      search(item);
      break;  
case 6:exit(0);
}}
return 0;
}     








